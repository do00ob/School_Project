面向对象
首先，JavaScript 没有结构体（Java也没有）
对象
对象的分类
1 内建对象 
在ES标准中定义的对象 在任何的ES的实现中都可以使用
比如 Math String Number Boolean Function....

2 宿主对象 
由JS的运行环境提供的对象 目前来讲主要指由浏览器提供的对象
比如 BOM DOM
例 console 和 document 就属于这一类

3 自定义对象
由开发人员自己创建的对象

基本操作
1 使用new关键字调用的函数 是构造函数 constructor
2 如果读取对象中没有的属性 不会报错而是返回undefined
3 删除对象的属性 语法： delete 对象.属性名
4 在JS中使用对对象属性的赋值语句时 如果没这属性还会先创建该属性再赋值
    说人话，就是赋值也会顺带声明 js自定义类的属性没有声明只有赋值(this.XX = ..)

属性名和属性值
属性名
对象的属性名不强制要求遵循标识符的规范
    什么乱七八糟的名字都可以使用
但是我们使用的是还是尽量按照标识符的规范去做

如果要使用特殊的属性名 不能采用.的方式来操作
    需要使用另一种方式
        语法：对象["属性名"] = 属性值
    读取时也需要采用这种方式
例如 ：obj["132"] = 789

关于对象["属性名"] = 属性值这种方法
如果[]是一个变量 那么等价于 对象[变量的值] = 属性值
例如 var n = "132"
obj["132"] 等价于 obj[n] 

属性值
1 对象的属性可以是对象
2 in 运算符
    通过该运算符可以检查一个对象中是否含有指定的属性
        如果有返回true 没有返回false
    语法
        "属性名" in 对象

对象字面量
使用对象字面量 可以在创建对象时 直接指定对象的属性
语法：{属性名:属性值,属性名:属性值.....    }
    对象字面量的属性名可以加引号也可以不加 建议不加
        但如果使用一些特殊的名字 则必须加

属性名和属性值是一组一组的名值对结构
    名和值之间使用:连接 多个名值对之间使用,隔开
    如果一个属性后之后没有其他属性 就不要写,




















